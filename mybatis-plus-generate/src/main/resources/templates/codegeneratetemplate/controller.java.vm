package ${package.Controller};

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.dream.xy.bootx.mybatisplusgenerate.CommonConstant;
import com.dream.xy.bootx.mybatisplusgenerate.utils.ResultDto;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
/**
 * <p>
 * $!{table.comment} Controllerå±‚
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
	@Autowired
	private ${table.serviceName} i${entity}Service;
	@RequestMapping("/list")
	public List<${entity}> select${entity}List() {
		return i${entity}Service.list();
	}
	
	@ResponseBody
	@RequestMapping(method=RequestMethod.POST,value="/add")
	public ResultDto saveUser(@RequestBody ${entity} record) {
		ResultDto rsDto=new ResultDto(CommonConstant.resultCode,CommonConstant.resultMsg);
		i${entity}Service.save(record);
		return rsDto;
	}
	@ResponseBody
	@RequestMapping(method=RequestMethod.POST,value="/update")
	public ResultDto updateUser(@RequestBody ${entity} record) {
		ResultDto rsDto=new ResultDto(CommonConstant.resultCode,CommonConstant.resultMsg);
		i${entity}Service.updateById(record);
		return rsDto;
	}
	@ResponseBody
	@RequestMapping(method=RequestMethod.POST,value="/delete")
	public ResultDto deleteUser(@RequestBody ${entity} record) {
		ResultDto rsDto=new ResultDto(CommonConstant.resultCode,CommonConstant.resultMsg);
		i${entity}Service.removeById(record.getId());
		return rsDto;
	}
	
}

#end